<div class="w-full min-h-[48rem] mb-16">

  <div class="border-b flex justify-between items-center">
    <div class="sm:flex sm:items-baseline sm:justify-between">
      <div class="flex items-center sm:w-0 sm:flex-1">
        <%= link_to validators_path, class: "mr-3 p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors" do %>
          <svg class="w-5 h-5 text-gray-600 dark:text-gray-300" viewBox="0 0 36 40" xmlns="http://www.w3.org/2000/svg">
            <path fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" d="M24.5118 8.82165C25.1627 9.47253 25.1627 10.5278 24.5118 11.1787L15.6904 20.0002L24.5118 28.8217C25.1627 29.4725 25.1627 30.5278 24.5118 31.1787C23.861 31.8295 22.8057 31.8295 22.1548 31.1787L12.1548 21.1787C11.5039 20.5278 11.5039 19.4725 12.1548 18.8217L22.1548 8.82165C22.8057 8.17078 23.861 8.17078 24.5118 8.82165Z"></path>
          </svg>
        <% end %>
        <div>
          <h1 id="message-heading" class="text-base font-semibold leading-6 text-gray-900 dark:text-gray-200"><%= t('public.validators.validator') %>
            (<%= @validator.name %>)</h1>
          <%= render partial: "validators/address_link_copy", locals: { validator: @validator } %>
        </div>
      </div>
    </div>
    <div class="overflow-hidden px-4 py-5 sm:p-6">
      <dt class="truncate text-sm font-medium text-gray-500 dark:text-gray-100"><%= t('public.validators.date_started') %></dt>
      <dd class="mt-1 text-xl font-semibold tracking-tight text-gray-900 dark:text-gray-100"><%= display_utc(@validator.start_date) %>
      </dd>
    </div>
  </div>

  <div>
    <dl class="mt-5 grid grid-cols-1 gap-5 sm:grid-cols-3">
      <div class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 dark:bg-gray-700">
        <dt class="truncate text-sm font-medium text-gray-500 dark:text-gray-100"><%= t('public.validators.active_stake') %></dt>
        <dd class="mt-1 text-xl font-semibold tracking-tight text-gray-900 dark:text-gray-100">
          <%= octas_to_apt(@validator.active_stake) %> APT
        </dd>
      </div>
      <div class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 dark:bg-gray-700">
        <dt class="truncate text-sm font-medium text-gray-500 dark:text-gray-100"><%= t('public.validators.balance') %></dt>
        <dd class="mt-1 text-xl font-semibold tracking-tight text-gray-900 dark:text-gray-100">
          <%= octas_to_apt(@validator.balance) %> APT
        </dd>
      </div>
      <div class="overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6 dark:bg-gray-700">
        <dt class="truncate text-sm font-medium text-gray-500 dark:text-gray-100"><%= t('public.validators.rewards') %></dt>
        <dd class="mt-1 text-xl font-semibold tracking-tight text-gray-900 dark:text-gray-100">
          <%= octas_to_apt(@validator.rewards) %> APT
        </dd>
      </div>
    </dl>
  </div>

  <%= render partial: "validators/validator_scores", locals: { validator: @validator } %>

  <div class="mt-4">
    <%= link_to "Analytics", analytics_validator_path(@validator.address),
                class: "px-4 py-2 text-white bg-teal-500 rounded hover:bg-teal-600 cursor-pointer" %>
  </div>

  <div class="mt-8 flex justify-between items-center h-32"
       data-controller="rewards-sparkline"
       data-rewards-sparkline-rewards="<%= @rewards.map { |r| octas_to_apt(r.amount, 2) }.to_json %>"
       data-rewards-sparkline-sequences="<%= @rewards.map { |r| r.sequence }.to_json %>">
    <div class="h-32">
      <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-200"><%= t('rewards') %></h2>
      <p class="text-sm text-gray-500 dark:text-gray-400">Total
        <%= t('rewards') %>: <%= octas_to_apt(@validator.rewards) %> APT</p>
    </div>
    <div class="w-[75%] h-32 flex flex-col items-center justify-center">
      <canvas data-rewards-sparkline-target="sparkline"></canvas>
      <div class="-mt-2 text-sm text-gray-500 dark:text-gray-400"><%= t('sequence') %></div>
    </div>
  </div>

  <div class="mt-2">
    <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-200"><%= t('recent_block_rewards') %></h2>
  </div>
  <table class="min-w-full divide-y divide-gray-300 mt-2">
    <thead>
    <tr>
      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-300"><%= t('version_id') %>
      </th>
      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-300"><%= t('block') %></th>
      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-300"><%= t('age') %></th>
      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-300"><%= t('sequence') %></th>
      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-300"><%= t('amount') %></th>
    </tr>
    </thead>
    <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
    <%= render partial: "rewards_rows", locals: { rewards: @rewards } %>
    </tbody>
  </table>

  <div class="mt-4">
    <%= paginate @rewards %>
  </div>
</div>
<style>
    @keyframes spinAndFade {
        0% {
            transform: rotate(0deg);
            color: inherit;
        }
        50% {
            transform: rotate(180deg);
            color: #14B8A6;
        }
        100% {
            transform: rotate(360deg);
            color: inherit;
        }
    }

    .animate-spin-and-fade {
        animation: spinAndFade 1s ease-in-out;
    }
</style>
<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            const icon = document.getElementById('copy-icon');
            icon.classList.add('animate-spin-and-fade');
            setTimeout(() => {
                icon.classList.remove('animate-spin-and-fade');
            }, 1000);
        }).catch(err => {
            console.error('Failed to copy text: ', err);
        });
    }
</script>
